<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on </title>
    <link>/post/</link>
    <description>Recent content in Posts on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 28 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Module Three</title>
      <link>/post/module_three/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/module_three/</guid>
      <description>Welcome to module 3! Here are another 12 weeks of self reflection, broken down by units.
Below is a small extract for this module directly from the course&amp;rsquo;s website:
In this module, we’ll take an in depth look at the security risks which are associated with programming languages, from the perspectives of design and architecture approaches, programming paradigms, testing, the impact and implications of operating systems and libraries on software development, the security risks associated with distributed systems and APIs, and future trends in secure software and systems design.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 1 </title>
      <link>/post/m3u1/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u1/</guid>
      <description>Unit 1: Introduction to Secure Software Development And we&amp;rsquo;re back! After a two week pause from the previous module, we&amp;rsquo;re kicking off the first unit with software development methodologies. The agile methodology, with its popular adaptability, stands out as particularly useful for embedding security within the software development lifecycle.
I came across a paper that, despite being a few years old, offered insightful perspectives on integrating security practices within agile frameworks.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 10</title>
      <link>/post/m3u10/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u10/</guid>
      <description>Unit 10: From Distributed Computing to Microarchitectures Hello from Week 10! I can’t believe how time has flown. This week was all bout distributed computing and microarchitectures. Work is still keeping me busy in the US but I&amp;rsquo;m enjoying it quite a lot.
This week we dove deep into the variety of system architectures – from the good old monolithic deployments to the modern, sleek microservices, not forgetting virtualisation and containers.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 11</title>
      <link>/post/m3u11/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u11/</guid>
      <description>Unit 11: Future trends in Secure Software Development Hello and welcome to Week 11! We&amp;rsquo;re in the final run of this module now! Exciting!
This week, we&amp;rsquo;re looked into the future, exploring the up-and-coming trends in secure software development.
We’ve talked about a lot of different topics in this module, but this week, it’s like we’re looking through a telescope, catching a glimpse of what’s on the horizon in terms of secure design, development practices, programming languages, and operating systems.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 12</title>
      <link>/post/m3u12/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u12/</guid>
      <description>Unit 12: The Great Tanenbaum-Torvalds Debate Revisited Welcome to the grand finale of our SSD journey, Week 12!
Todo,
# Activities
This week, I unfortunately didn&amp;rsquo;t have time to participate in the Team Activity. My current workload, the time zone difference and the LMS assignment have all contributed to the lack of engagement with my fellow students.
I don&amp;rsquo;t like not participating, but I was out of depth here, juggling everything was tough.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 2</title>
      <link>/post/m3u2/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u2/</guid>
      <description>Unit 2: Exploring Software Security and UML Flow Charts Hello again! We’ve now fully back into study mode in this second week. This week we further looked into Agile and Software Development Life Cycle (SDLC). This week I also wrote my UML flow chart and posted on the University&amp;rsquo;s forum to discuss my findings. As discussed in the last unit, I choose BOLA. I&amp;rsquo;ve attached my Initial Post below if you want to read it.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 3</title>
      <link>/post/m3u3/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u3/</guid>
      <description>Unit 3: Programming Languages: History, Concepts &amp;amp; Design Hi! This third week has been a thrilling deep dive into the history, concepts, and designs of programming languages, and I’m excited to share it with you.
We started the week with a journey through the evolution of programming languages. It was like time traveling, from the early days of machine code and assembly language with the SSEM and Cambridge EDSAC, all the way to the iconic 1950s with the birth of Cobol, Fortran, Lisp, and ALGOL.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 3</title>
      <link>/post/m3u4/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u4/</guid>
      <description>Unit 4: Exploring Programming Language Concepts Welcome back! In Week 4, we explored the fascinating interplay between key programming concepts and system security, focusing on regular expressions and recursion.
I was amazed to see how powerful yet potentially dangerous regular expressions can be. Learning about their ability to cause ReDoS attacks opened my eyes to the importance of careful implementation. It’s clear that while they are indispensable for text manipulation, they require a thoughtful approach to ensure security.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 3</title>
      <link>/post/m3u5/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u5/</guid>
      <description>Unit 5: An Introduction to Testing Wow, week 5 already! Time flies! This week, we were challenged with the world of software testing. It’s been a bit tough, trying to get my head around all the testing lingo, different techniques, and tools out there.
We’ve covered a lot of material, from setting up a solid test plan and understanding the standards in the industry to digging into a bunch of testing methods.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 3</title>
      <link>/post/m3u6/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u6/</guid>
      <description>Unit 6: Using Linters to Support Python Testing Week 6! We&amp;rsquo;re half way there!
This week, I studied linters and their vital part in enhancing Python code quality. While linters don&amp;rsquo;t make your code better per say, they definetely help you in your day to day job and take away some cognitive load to help you better focus on the code.
Working with various linters, I discovered that while they aim to achieve similar goals, each has its unique strengths and applicability in different scenarios.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 7</title>
      <link>/post/m3u7/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u7/</guid>
      <description>Unit 7: Introduction to Operating Systems Week 7, here we go! This week was all about Operating Systems (OS) and how they play with programming languages and security.
Operating Systems, are like the backstage crew of a rock concert. You don’t see them, but they make sure everything runs smoothly. This week, I got to learn how applications talk to OS for things like getting keyboard input or showing elements on the screen.</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 8</title>
      <link>/post/m3u8/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u8/</guid>
      <description>Unit 8: Cryptography and Its Use in Operating Systems We&amp;rsquo;re now in the final units for this module. On a personal level, I know that the upcoming 4 weeks will be challenging. Work wants me in the US for the next 4 weeks as we&amp;rsquo;ve planning next&amp;rsquo;s year roadmap. Unfortunately, this is when this course picks up and you have to hand over a few marked assignments. However, I&amp;rsquo;ll do my best to keep everything under control!</description>
    </item>
    
    <item>
      <title>Module 3 - Unit 9</title>
      <link>/post/m3u9/</link>
      <pubDate>Sat, 28 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m3u9/</guid>
      <description>Unit 9: Developing an API for a Distributed Environment If you thought the past weeks were intense, brace yourself! Week 9 has thrown me right into the thick of developing an API for a distributed environment. With work demanding my presence in the US and my studies ramping up, it’s been a tough week, but hey, what&amp;rsquo;s life without a challenge or two?
Diving right into the nitty-gritty, we looked at CRUD capabilities in Python.</description>
    </item>
    
    <item>
      <title>Module 2 - Final Reflection</title>
      <link>/post/m2_final_reflection/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2_final_reflection/</guid>
      <description>Final Reflection Introduction What a module! I won&amp;rsquo;t lie, it&amp;rsquo;s been a long twelve weeks. In between work and the sheer amount of work expected in this module, I didn&amp;rsquo;t have much time to relax. In the first few weeks, I found myself learning more about Python, Object-Oriented Programming (OOP), UML diagrams and the subtle art of writing sustainable and maintainable code. I had no idea what UML was and I struggled to understand its core concepts at the beginning.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 1 </title>
      <link>/post/m2u1/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u1/</guid>
      <description>An Introduction to Python Programming and the OO Programming Paradigm The first week of module two has been a real eye-opener. The learning materials we&amp;rsquo;ve been given are packed with everything you need to know about object-oriented programming (OOP), from its core concepts to its historical development. In the 2021 paper by Di Silvestro &amp;amp; Nadir, they talk about using ePortfolios to promote deeper, more reflective learning, which is something traditional education often overlooks.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 10</title>
      <link>/post/m2u10/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u10/</guid>
      <description>Testing Code in Practice I started week 10 by keeping my promise. I posted on the Unit 8 forum, I actually posted two messages. The first message was replying to a fellow student. I managed to critically respond and pinpoint a potential flaw in their discussion. I brought to light the vulnerabilities of IoT systems and how it could potentially impact the systems and brand reputation. The second message was my initial post.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 11</title>
      <link>/post/m2u11/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u11/</guid>
      <description>Pointers, References &amp;amp; Memory, and Design Patterns Week 11! Assigment week!
I managed to submit my design implementation assignment on time! I won&amp;rsquo;t lie, I&amp;rsquo;m pretty happy about it. Again, work has been busy and stressful, so having completed the assignment is a total relief. Reflecting on this, I believe I managed to fullfill the requirements I designed a couple of weeks ago. It was nice to be able to turn the UML diagrams into a working python application.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 12</title>
      <link>/post/m2u12/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u12/</guid>
      <description>Working with Design Patterns to Structure Code That&amp;rsquo;s it, we&amp;rsquo;ve reached the final week of this module!
I&amp;rsquo;m still in the US with work, and if I am being completely honest, I need to work on my studies a bit harder. I barely touched the final reflection piece. It should be 1000 words so I really need to focus so that I can submit it in time.
In this unit, there was some interesting reading materials, from Factory design pattern to reusable object-oriented software!</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 2</title>
      <link>/post/m2u2/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u2/</guid>
      <description>Object Oriented Analysis - Initial Steps towards Programming in Python The second unit of this module had us diving headfirst into the nuts and bolts of how actors interact with software. We also explored functional requirements that shape these interactions. The high point for me was designing use case diagrams and state machine diagrams. These diagrams really help give a clear and concise snapshot on how systems behave and interact with each others.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 3</title>
      <link>/post/m2u3/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u3/</guid>
      <description>UML The third week of the module was all about getting to know the Unified Modelling Language (UML). I have to be honest, I had never heard of it prior to starting this unit. However, the deeper I studied UML&amp;rsquo;s shared syntax and models, the clearer it became how useful it is in making sure everyone is on the same page when designing an application.
One thing that really caught my attention was how different UML models come into play at different stages of the Software Development Life Cycle (SDLC).</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 4</title>
      <link>/post/m2u4/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u4/</guid>
      <description>UML In Week 4, I dug deeper into the world of UML models. This fourth unit introduced class diagrams. Class diagrams are quite important as they show the structure of a system, its classes, their methods, and how each object relates to each other.
As the week progressed, it felt like these UML diagrams were the blueprints, and I was the builder turning them into actual code. It was pretty cool to see how an abstract idea in a UML diagram could become a fully working software system.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 5</title>
      <link>/post/m2u5/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u5/</guid>
      <description>More on Classes In unit 5, I explored deeper into Python and object-oriented programming (OOP). The readings helped me with concepts like abstract classes and constructors.
I also explored polymorphism and composition. These concepts opened my perspective on how to make my code more modular. I found namespaces and packages interesting, as they help avoid naming clashes. I had no idea this was a thing in Python.
Another week and another ton of learning.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 6</title>
      <link>/post/m2u6/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u6/</guid>
      <description>Abstract Methods and Interfaces Unit 6, we&amp;rsquo;re half way there! This week was all about interfaces in Python. I discovered that interfaces are fundamental for designing good classes. They help keep things consistent and well-encapsulated. To go the extra mile, I also read another realpython.com article on Python Interfaces (Python, n.d.).
In Chapter 9 of &amp;ldquo;Python 3 Object-oriented Programming&amp;rdquo; (3rd ed., Packt Publishing, 2018), Philips introduces decorators as a tool for modifying the behaviour of functions.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 7</title>
      <link>/post/m2u7/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u7/</guid>
      <description>Debugging / Error Handling, Data Structures and Data Search Week seven was all about bugs 🐛 and debugging. It was about understanding how, when and why they crawl into my code and the best ways to boot them out. Honestly, getting hands-on with different error types felt like developing a sixth sense for catching where my code needed a little extra attention.
I learned about linters, too - they&amp;rsquo;re like those grammar apps, but for Python code.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 8</title>
      <link>/post/m2u8/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u8/</guid>
      <description>Data Structures and Data Search in Practice This week I was looking into set operations and linear data search techniques. I got to see first-hand how set operations like union, intersection, and others work when handling complex data. I can see how I would apply set operations in my driverless car system design and more specifically in sensors data. This would need to store and handle lots of data so it seems like a perfect match from what I learned.</description>
    </item>
    
    <item>
      <title>Module 2 - Unit 9</title>
      <link>/post/m2u9/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/m2u9/</guid>
      <description>Packaging and Testing During week 9, I looked into the less flashy, but no less important, side of programming: packaging, documenting, and testing. These aren&amp;rsquo;t just box-ticking exercises – they&amp;rsquo;re pivotal for maintaining and improving my work effectively.
I learned that packaging my Python programs is crucial for distributing software easily. I spent some time with the Python Enhancement Proposals, PEP8 and PEP257, and the message was clear – writing clean, readable and tested code is a big deal.</description>
    </item>
    
    <item>
      <title>Module Two</title>
      <link>/post/module_two/</link>
      <pubDate>Tue, 23 May 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/module_two/</guid>
      <description>Here are another 12 weeks of self reflection, broken down by units. I&amp;rsquo;ve written them in a pretty informal way.
I hope each reflection will give you some insight into my studies.
Below is a small extract from the course&amp;rsquo;s website:
In this module, we will use the Python programming language to support the design and development of object oriented programs. The object oriented analysis and design process will be supported using the Unified Modelling Language (UML).</description>
    </item>
    
    <item>
      <title>Module One</title>
      <link>/post/module_one/</link>
      <pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>/post/module_one/</guid>
      <description>Coming soon :construction:
Unit 1 Unit 2 Unit 3 Unit 4 Unit 5 Unit 6 Unit 7 Unit 8 Unit 9 Unit 10 Unit 11 Unit 12 </description>
    </item>
    
  </channel>
</rss>
